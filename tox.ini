[tox]
# Define Python versions to test against (adjust as needed)
envlist = py310
isolated_build = True

[testenv]
# Base environment configuration

# Recreate virtualenv only if requirements change
recreate = False

# Install dependencies
deps =
    -rrequirements.txt
    # Add any other test-specific deps here
    pytest
    pytest-asyncio
    pytest-httpx
    freezegun
    allure-pytest
    # pytest-xdist # Uncomment for parallel execution later

# Commands to run tests
# {posargs} allows passing arguments like -m unit or -k test_name to tox
commands =
    # Clean old allure results first
    # Use /bin/bash -c for complex commands with && or rm
    /bin/bash -c "rm -rf ./allure-results && mkdir -p ./allure-results"
    pytest {posargs} --alluredir=./allure-results

# Environment variables (if needed for tests)
# setenv =
#    MY_VAR = value

[pytest]
# This section can be used if you don't have a separate pytest.ini
# Or it can override parts of pytest.ini if needed.
# Since we have pytest.ini, this is mostly redundant unless overriding.
# testpaths = tests
# python_files = test_*.py
# asyncio_mode = strict 